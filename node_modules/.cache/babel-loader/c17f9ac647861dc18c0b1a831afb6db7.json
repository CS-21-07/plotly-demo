{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benajasandrain/GitHub/plotly-demo/src/pages/CombineGraphPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n// import Plot from \"react-plotly.js\";\nimport * as companies from \"../data/urlMatcher.json\";\nimport { Link } from \"react-router-dom\";\nimport Plotly from \"plotly.js\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nconst Plot = createPlotlyComponent(Plotly);\n_c = Plot;\n\nconst CombineGraph = props => {\n  _s();\n\n  // setting to props parameters\n  const company = props.match.params.company;\n  const option = props.match.params.option;\n  const companyList = company.split(\"+\");\n  console.log(companyList);\n  let dailyValues = [];\n  let dailyValuesOrdinate = [];\n  let dates = []; // const TEST_COMP = [\n  //   \"https://raw.githubusercontent.com/CS-21-07/jsonStorage/main/ffivestock.json\",\n  //   \"https://raw.githubusercontent.com/CS-21-07/jsonStorage/main/citrixstock.json\",\n  // ];\n  // const TEST_COMP_NAME = [\"F-5\", \"Citrix\"];\n\n  let plotGraphData = [];\n  const [fetchUrl, setfetchUrl] = useState(\"ffive\");\n  const [trigger, setTrigger] = useState(true);\n  const [extension, setExtension] = useState(\"\");\n  const [value, setValue] = useState(\"Close\");\n  const [GraphTitle, setGraphTitle] = useState(\"\");\n  const [dataGraph, setDataGraph] = useState([]);\n  const [xx, setxx] = useState([]);\n  const [yy, setyy] = useState([]);\n  const [whichAxes, setWhichY] = useState(0);\n  useEffect(() => {\n    async function myFetch(toFetch) {\n      const response = await fetch(toFetch);\n      return Promise.resolve(response);\n    }\n\n    let myFetches = [];\n    companyList.forEach(id => {\n      if (id != \"\") {\n        var _companies$companies$, _companies$companies$2;\n\n        const fetching = (_companies$companies$ = companies.companies.find(comp => comp.id === id)) === null || _companies$companies$ === void 0 ? void 0 : _companies$companies$.JsonUrl;\n        console.log(\"we are fetching: \" + fetching);\n        const companyName = (_companies$companies$2 = companies.companies.find(comp => comp.id === id)) === null || _companies$companies$2 === void 0 ? void 0 : _companies$companies$2.name;\n        console.log(\"Company we are fetching: \" + companyName);\n        setfetchUrl(fetching);\n        const dataone = myFetch(\"https://raw.githubusercontent.com/CS-21-07/jsonStorage/main/ffivestock.json\");\n        const datatwo = myFetch(\"https://raw.githubusercontent.com/CS-21-07/jsonStorage/main/citrixstock.json\");\n        myFetches = [dataone, datatwo]; // myFetches.push(myFetch(fetchUrl));\n      }\n    });\n    Promise.all(myFetches).then(files => {\n      files.forEach(file => {\n        process(file.json);\n      });\n    }).catch(err => {\n      console.log(\"There was an error in fetching\", err);\n    });\n\n    let process = promise => {\n      dailyValues = [];\n      promise.then(data => {\n        const stockEvents = data;\n        console.log(stockEvents === null || stockEvents === void 0 ? void 0 : stockEvents.length);\n        console.log(stockEvents);\n\n        for (let i = 0; i < (stockEvents === null || stockEvents === void 0 ? void 0 : stockEvents.length); i++) {\n          let tempString = JSON.stringify(stockEvents[i]); //extract(stockEvents[i]);\n\n          let obj = JSON.parse(tempString);\n          let dailyExchangeObj = {\n            date: obj.Date,\n            high: obj.High,\n            low: obj.Low,\n            open: obj.Open,\n            volume: obj.Volume,\n            close: obj.Close\n          };\n          dailyValues.push(dailyExchangeObj);\n        }\n\n        populateGraphValue(dailyValues);\n      });\n    };\n\n    setValue(option);\n  }, []);\n\n  function populateGraphValue(dailyValuesList) {\n    for (let i = 0; i < dailyValuesList.length; i++) {\n      manageOption(dailyValuesList[i]);\n      dates.push(toDateObject(dailyValuesList[i].date));\n    }\n\n    setxx(dates);\n    setyy(dailyValuesOrdinate);\n    console.log(xx);\n    console.log(yy);\n    dates = [];\n    dailyValuesOrdinate = [];\n    let yaxe = \"y\";\n\n    if (whichAxes === 0) {\n      yaxe.concat(\"\");\n      setWhichY(whichAxes + 1);\n    } else {\n      yaxe.concat(whichAxes.toString());\n      setWhichY(whichAxes + 1);\n    }\n\n    let graphData = {\n      x: xx,\n      y: yy,\n      type: \"scatter\",\n      mode: \"lines\",\n      yaxis: yaxe,\n      name: \"GraphTitle\"\n    };\n    console.log(graphData);\n    plotGraphData = dataGraph;\n    plotGraphData.push(graphData);\n    setDataGraph(plotGraphData);\n    console.log(\"Number of graph in my list \" + plotGraphData.length);\n  }\n\n  function manageOption(obj) {\n    switch (option) {\n      case \"close\":\n        dailyValuesOrdinate.push(obj.close);\n        break;\n\n      case \"high\":\n        dailyValuesOrdinate.push(obj.high);\n        break;\n\n      case \"low\":\n        dailyValuesOrdinate.push(obj.low);\n        break;\n\n      case \"volume\":\n        dailyValuesOrdinate.push(obj.volume);\n        break;\n\n      case \"open\":\n        dailyValuesOrdinate.push(obj.open);\n        break;\n\n      default:\n        dailyValuesOrdinate.push(obj.close);\n        break;\n    }\n  }\n\n  function toDateObject(dateString) {\n    const temp = dateString.split(\"-\");\n    const date = new Date();\n    date.setFullYear(parseInt(temp[0]), parseInt(temp[1]), parseInt(temp[2]));\n    return date;\n  }\n\n  function handleChange(event) {\n    const linkvalue = event.target.value;\n    setValue(linkvalue);\n    setExtension(\"/visual/\" + company + \"/\" + linkvalue.toLowerCase());\n    console.log(extension);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      alignItems: \"center\",\n      margin: \"12\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home\",\n        type: \"button\",\n        children: \"Go to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Pick the chart to display:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: value,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Close\",\n            children: \"Select from Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Open\",\n            children: \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Volume\",\n            children: \"Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Close\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"High\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: extension,\n        children: \"Visualize \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Plot, {\n        data: dataGraph,\n        layout: {\n          width: 1000,\n          height: 600,\n          title: GraphTitle\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CombineGraph, \"eJjAfdxxkLj4+6H+JltRCwW7Q74=\");\n\n_c2 = CombineGraph;\nexport default CombineGraph;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Plot\");\n$RefreshReg$(_c2, \"CombineGraph\");","map":{"version":3,"sources":["/Users/benajasandrain/GitHub/plotly-demo/src/pages/CombineGraphPage.tsx"],"names":["React","useState","useEffect","companies","Link","Plotly","createPlotlyComponent","Plot","CombineGraph","props","company","match","params","option","companyList","split","console","log","dailyValues","dailyValuesOrdinate","dates","plotGraphData","fetchUrl","setfetchUrl","trigger","setTrigger","extension","setExtension","value","setValue","GraphTitle","setGraphTitle","dataGraph","setDataGraph","xx","setxx","yy","setyy","whichAxes","setWhichY","myFetch","toFetch","response","fetch","Promise","resolve","myFetches","forEach","id","fetching","find","comp","JsonUrl","companyName","name","dataone","datatwo","all","then","files","file","process","json","catch","err","promise","data","stockEvents","length","i","tempString","JSON","stringify","obj","parse","dailyExchangeObj","date","Date","high","High","low","Low","open","Open","volume","Volume","close","Close","push","populateGraphValue","dailyValuesList","manageOption","toDateObject","yaxe","concat","toString","graphData","x","y","type","mode","yaxis","dateString","temp","setFullYear","parseInt","handleChange","event","linkvalue","target","toLowerCase","alignItems","margin","width","height","title"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\n// import Plot from \"react-plotly.js\";\nimport * as companies from \"../data/urlMatcher.json\";\nimport { Link } from \"react-router-dom\";\n\nimport Plotly from \"plotly.js\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nconst Plot = createPlotlyComponent(Plotly);\n\ninterface CombineGraphPropsInterface\n  extends RouteComponentProps<{ company: string; option: string }> {\n  // Other props that belong to component it self not Router\n}\n\nconst CombineGraph: React.FC<CombineGraphPropsInterface> = (\n  props: CombineGraphPropsInterface\n) => {\n  // setting to props parameters\n  const company = props.match.params.company;\n  const option = props.match.params.option;\n\n  const companyList: string[] = company.split(\"+\");\n  console.log(companyList);\n\n  type DailyExchange = {\n    date: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    adjClose?: number;\n    volume: number;\n  };\n\n  type Marker = {\n    color: string;\n  };\n\n  type PlotGraph = {\n    x: any[];\n    y: any[];\n    type: string;\n    mode?: string;\n    name?: string;\n    yaxis: string;\n  };\n\n  let dailyValues: DailyExchange[] = [];\n  let dailyValuesOrdinate: number[] = [];\n  let dates: Date[] = [];\n\n  // const TEST_COMP = [\n  //   \"https://raw.githubusercontent.com/CS-21-07/jsonStorage/main/ffivestock.json\",\n  //   \"https://raw.githubusercontent.com/CS-21-07/jsonStorage/main/citrixstock.json\",\n  // ];\n  // const TEST_COMP_NAME = [\"F-5\", \"Citrix\"];\n\n  let plotGraphData: any[] = [];\n\n  const [fetchUrl, setfetchUrl] = useState<any>(\"ffive\");\n  const [trigger, setTrigger] = useState<boolean>(true);\n  const [extension, setExtension] = useState(\"\");\n  const [value, setValue] = useState<string>(\"Close\");\n  const [GraphTitle, setGraphTitle] = useState(\"\");\n  const [dataGraph, setDataGraph] = useState<any[]>([]);\n  const [xx, setxx] = useState<Date[]>([]);\n  const [yy, setyy] = useState<number[]>([]);\n  const [whichAxes, setWhichY] = useState<number>(0);\n\n  useEffect(() => {\n    async function myFetch(toFetch: string): Promise<any> {\n      const response = await fetch(toFetch);\n      return Promise.resolve(response);\n    }\n\n    let myFetches: any[] = [];\n\n    companyList.forEach((id) => {\n      if (id != \"\") {\n        const fetching = companies.companies.find((comp) => comp.id === id)\n          ?.JsonUrl;\n        console.log(\"we are fetching: \" + fetching);\n\n        const companyName = companies.companies.find((comp) => comp.id === id)\n          ?.name;\n        console.log(\"Company we are fetching: \" + companyName);\n        setfetchUrl(fetching);\n\n        const dataone = myFetch(\n          \"https://raw.githubusercontent.com/CS-21-07/jsonStorage/main/ffivestock.json\"\n        );\n        const datatwo = myFetch(\n          \"https://raw.githubusercontent.com/CS-21-07/jsonStorage/main/citrixstock.json\"\n        );\n        myFetches = [dataone, datatwo];\n\n        // myFetches.push(myFetch(fetchUrl));\n      }\n    });\n\n    Promise.all(myFetches)\n      .then((files) => {\n        files.forEach((file) => {\n          process(file.json);\n        });\n      })\n      .catch((err) => {\n        console.log(\"There was an error in fetching\", err);\n      });\n\n    let process = (promise) => {\n      dailyValues = [];\n      promise.then((data) => {\n        const stockEvents: any[] = data;\n        console.log(stockEvents?.length);\n        console.log(stockEvents);\n        for (let i: number = 0; i < stockEvents?.length; i++) {\n          let tempString: string = JSON.stringify(stockEvents[i]); //extract(stockEvents[i]);\n          let obj = JSON.parse(tempString);\n          let dailyExchangeObj: DailyExchange = {\n            date: obj.Date,\n            high: obj.High,\n            low: obj.Low,\n            open: obj.Open,\n            volume: obj.Volume,\n            close: obj.Close,\n          };\n          dailyValues.push(dailyExchangeObj);\n        }\n        populateGraphValue(dailyValues);\n      });\n    };\n    setValue(option);\n  }, []);\n\n  function populateGraphValue(dailyValuesList: any[]): void {\n    for (let i = 0; i < dailyValuesList.length; i++) {\n      manageOption(dailyValuesList[i]);\n      dates.push(toDateObject(dailyValuesList[i].date));\n    }\n    setxx(dates);\n    setyy(dailyValuesOrdinate);\n    console.log(xx);\n    console.log(yy);\n\n    dates = [];\n    dailyValuesOrdinate = [];\n\n    let yaxe = \"y\";\n    if (whichAxes === 0) {\n      yaxe.concat(\"\");\n      setWhichY(whichAxes + 1);\n    } else {\n      yaxe.concat(whichAxes.toString());\n      setWhichY(whichAxes + 1);\n    }\n\n    let graphData: PlotGraph = {\n      x: xx,\n      y: yy,\n      type: \"scatter\",\n      mode: \"lines\",\n      yaxis: yaxe,\n      name: \"GraphTitle\",\n    };\n    console.log(graphData);\n    plotGraphData = dataGraph;\n    plotGraphData.push(graphData);\n    setDataGraph(plotGraphData);\n    console.log(\"Number of graph in my list \" + plotGraphData.length);\n  }\n\n  function manageOption(obj: DailyExchange): void {\n    switch (option) {\n      case \"close\":\n        dailyValuesOrdinate.push(obj.close);\n        break;\n      case \"high\":\n        dailyValuesOrdinate.push(obj.high);\n        break;\n      case \"low\":\n        dailyValuesOrdinate.push(obj.low);\n        break;\n      case \"volume\":\n        dailyValuesOrdinate.push(obj.volume);\n        break;\n      case \"open\":\n        dailyValuesOrdinate.push(obj.open);\n        break;\n      default:\n        dailyValuesOrdinate.push(obj.close);\n        break;\n    }\n  }\n\n  function toDateObject(dateString: string): Date {\n    const temp: string[] = dateString.split(\"-\");\n    const date: Date = new Date();\n    date.setFullYear(parseInt(temp[0]), parseInt(temp[1]), parseInt(temp[2]));\n    return date;\n  }\n\n  function handleChange(event) {\n    const linkvalue: string = event.target.value;\n    setValue(linkvalue);\n    setExtension(\"/visual/\" + company + \"/\" + linkvalue.toLowerCase());\n    console.log(extension);\n  }\n\n  return (\n    <div style={{ alignItems: \"center\", margin: \"12\" }}>\n      <div>\n        <Link to={\"/home\"} type=\"button\">\n          Go to Home\n        </Link>\n      </div>\n      <div>\n        <label>\n          Pick the chart to display:\n          <select value={value} onChange={handleChange}>\n            <option value=\"Close\">Select from Menu</option>\n            <option value=\"Open\">Open</option>\n            <option value=\"Volume\">Volume</option>\n            <option value=\"Close\">Close</option>\n            <option value=\"High\">High</option>\n            <option value=\"Low\">Low</option>\n          </select>\n        </label>\n        <a href={extension}>Visualize </a>\n      </div>\n      <div>\n        <Plot\n          data={dataGraph}\n          layout={{\n            width: 1000,\n            height: 600,\n            title: GraphTitle,\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CombineGraph;\n"]},"metadata":{},"sourceType":"module"}