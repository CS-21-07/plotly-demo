{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benajasandrain/GitHub/plotly-demo/src/pages/CombineGraphPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n// import Plot from \"react-plotly.js\";\nimport * as companies from \"../data/urlMatcher.json\";\nimport { Link } from \"react-router-dom\";\nimport Plotly from \"plotly.js\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nconst Plot = createPlotlyComponent(Plotly);\n_c = Plot;\n\nconst CombineGraph = props => {\n  _s();\n\n  // setting to props parameters\n  const company = props.match.params.company;\n  const option = props.match.params.option;\n  const companyList = company.split(\"+\").filter(elm => elm !== \"\");\n  console.log(companyList);\n  const yaxis = {\n    title: \"yaxis title\",\n    titlefont: {\n      color: \"#1f77b4\"\n    },\n    tickfont: {\n      color: \"#1f77b4\"\n    }\n  };\n  const yaxis2 = {\n    title: \"yaxis2 title\",\n    titlefont: {\n      color: \"#ff7f0e\"\n    },\n    tickfont: {\n      color: \"#ff7f0e\"\n    },\n    anchor: \"free\",\n    overlaying: \"y\",\n    side: \"left\",\n    position: 0.125\n  };\n  const yaxis3 = {\n    title: \"yaxis4 title\",\n    titlefont: {\n      color: \"#d62728\"\n    },\n    tickfont: {\n      color: \"#d62728\"\n    },\n    anchor: \"x\",\n    overlaying: \"y\",\n    side: \"right\"\n  };\n  const yaxis4 = {\n    title: \"yaxis5 title\",\n    titlefont: {\n      color: \"#9467bd\"\n    },\n    tickfont: {\n      color: \"#9467bd\"\n    },\n    anchor: \"free\",\n    overlaying: \"y\",\n    side: \"right\",\n    position: 0.85\n  };\n  let plotGraphData = [];\n  const [fetchUrl, setfetchUrl] = useState();\n  const [trigger, setTrigger] = useState(true);\n  const [extension, setExtension] = useState(\"\");\n  const [value, setValue] = useState(\"Close\");\n  const [GraphTitle, setGraphTitle] = useState(\"\");\n  const [dataGraph, setDataGraph] = useState([]);\n\n  async function myFetch(toFetch) {\n    console.log(\"fetching2: \" + toFetch);\n    const response = await fetch(toFetch); // return Promise.resolve(response);\n\n    return response;\n  }\n\n  function populateGraphValue(dailyValuesList, graphTitle) {\n    let dailyValuesOrdinate = [];\n    let dates = [];\n    console.log(dailyValuesList);\n    dailyValuesList.forEach(daily => {\n      dailyValuesOrdinate.push(manageOption(daily));\n      dates.push(toDateObject(daily.date));\n    });\n    const graphData = {\n      x: dates,\n      y: dailyValuesOrdinate,\n      type: \"scatter\",\n      yaxis: \"y\".concat(plotGraphData.length === 0 ? \"\" : (plotGraphData.length + 1).toString()),\n      name: graphTitle\n    };\n    console.log(graphData);\n    plotGraphData = dataGraph;\n    plotGraphData.push(graphData);\n    setDataGraph(plotGraphData);\n    console.log(\"Number of graph in my list \" + plotGraphData.length);\n    dates = [];\n    dailyValuesOrdinate = [];\n  }\n\n  function manageOption(obj) {\n    switch (option) {\n      case \"close\":\n        return obj.close;\n        break;\n\n      case \"high\":\n        return obj.high;\n        break;\n\n      case \"low\":\n        return obj.low;\n        break;\n\n      case \"volume\":\n        return obj.volume;\n        break;\n\n      case \"open\":\n        return obj.open;\n        break;\n\n      default:\n        return obj.close;\n        break;\n    }\n  }\n\n  function process(prom, graphTitle) {\n    let dailyValues = [];\n    prom.then(data => {\n      const stockEvents = data;\n      console.log(stockEvents === null || stockEvents === void 0 ? void 0 : stockEvents.length);\n      console.log(stockEvents);\n      stockEvents.forEach(stocky => {\n        let tempString = JSON.stringify(stocky); //extract(stockEvents[i]);\n\n        let obj = JSON.parse(tempString);\n        let dailyExchangeObj = {\n          date: obj.Date,\n          high: obj.High,\n          low: obj.Low,\n          open: obj.Open,\n          volume: obj.Volume,\n          close: obj.Close\n        };\n        dailyValues.push(dailyExchangeObj);\n      });\n      populateGraphValue(dailyValues, graphTitle);\n    }).catch(err => {\n      console.log(\"There was an error in fetching\", err);\n    });\n  }\n\n  function toDateObject(dateString) {\n    const temp = dateString.split(\"-\");\n    const date = new Date();\n    date.setFullYear(parseInt(temp[0]), parseInt(temp[1]), parseInt(temp[2]));\n    return date;\n  }\n\n  useEffect(() => {\n    setValue(option);\n    let myFetches = [];\n    let companiesFetched = [];\n    companyList.forEach(id => {\n      if (id !== \"\") {\n        var _companies$companies$, _companies$companies$2;\n\n        const fetching = (_companies$companies$ = companies.companies.find(comp => comp.id === id)) === null || _companies$companies$ === void 0 ? void 0 : _companies$companies$.JsonUrl;\n        console.log(\"we are fetching: \" + fetching);\n        const companyName = (_companies$companies$2 = companies.companies.find(comp => comp.id === id)) === null || _companies$companies$2 === void 0 ? void 0 : _companies$companies$2.name;\n        console.log(\"Company we are fetching: \" + companyName);\n        companiesFetched.push(String(companyName));\n        console.log(\"fetching: \" + fetching);\n        myFetches.push(myFetch(String(fetching)));\n      }\n    });\n    companiesFetched.reverse();\n    Promise.all(myFetches).then(files => {\n      files.forEach(file => {\n        process(file.json(), String(companiesFetched.pop()));\n      });\n    }).catch(err => {\n      console.log(\"There was an error in fetching\", err);\n    });\n  }, []);\n\n  function handleChange(event) {\n    const linkvalue = event.target.value;\n    setValue(linkvalue);\n    setExtension(\"/visualMultiple/\" + company + \"/\" + linkvalue.toLowerCase());\n    console.log(extension);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      alignItems: \"center\",\n      margin: \"12\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home\",\n        type: \"button\",\n        children: \"Go to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Pick the chart to display:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: value,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Close\",\n            children: \"Select from Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Open\",\n            children: \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Volume\",\n            children: \"Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Close\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"High\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: extension,\n        children: \"Visualize \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Plot, {\n        data: dataGraph,\n        layout: {\n          // width: 1000,\n          // height: 600,\n          title: \"Double Y Axis Example\",\n          yaxis: yaxis,\n          yaxis2: yaxis3,\n          yaxis3: yaxis2,\n          yaxis4: yaxis4\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CombineGraph, \"lmMxwdCbYKgsuxrMkOSPM4izqsw=\");\n\n_c2 = CombineGraph;\nexport default CombineGraph;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Plot\");\n$RefreshReg$(_c2, \"CombineGraph\");","map":{"version":3,"sources":["/Users/benajasandrain/GitHub/plotly-demo/src/pages/CombineGraphPage.tsx"],"names":["React","useState","useEffect","companies","Link","Plotly","createPlotlyComponent","Plot","CombineGraph","props","company","match","params","option","companyList","split","filter","elm","console","log","yaxis","title","titlefont","color","tickfont","yaxis2","anchor","overlaying","side","position","yaxis3","yaxis4","plotGraphData","fetchUrl","setfetchUrl","trigger","setTrigger","extension","setExtension","value","setValue","GraphTitle","setGraphTitle","dataGraph","setDataGraph","myFetch","toFetch","response","fetch","populateGraphValue","dailyValuesList","graphTitle","dailyValuesOrdinate","dates","forEach","daily","push","manageOption","toDateObject","date","graphData","x","y","type","concat","length","toString","name","obj","close","high","low","volume","open","process","prom","dailyValues","then","data","stockEvents","stocky","tempString","JSON","stringify","parse","dailyExchangeObj","Date","High","Low","Open","Volume","Close","catch","err","dateString","temp","setFullYear","parseInt","myFetches","companiesFetched","id","fetching","find","comp","JsonUrl","companyName","String","reverse","Promise","all","files","file","json","pop","handleChange","event","linkvalue","target","toLowerCase","alignItems","margin"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\n// import Plot from \"react-plotly.js\";\nimport * as companies from \"../data/urlMatcher.json\";\nimport { Link } from \"react-router-dom\";\n\nimport Plotly from \"plotly.js\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nconst Plot = createPlotlyComponent(Plotly);\n\ninterface CombineGraphPropsInterface\n  extends RouteComponentProps<{ company: string; option: string }> {\n  // Other props that belong to component it self not Router\n}\n\nconst CombineGraph: React.FC<CombineGraphPropsInterface> = (\n  props: CombineGraphPropsInterface\n) => {\n  // setting to props parameters\n  const company = props.match.params.company;\n  const option = props.match.params.option;\n\n  const companyList: string[] = company.split(\"+\").filter((elm) => elm !== \"\");\n  console.log(companyList);\n\n  type DailyExchange = {\n    date: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    adjClose?: number;\n    volume: number;\n  };\n\n  type PlotGraph = {\n    x: any[];\n    y: any[];\n    type: string;\n    mode?: string;\n    name?: string;\n    yaxis: string;\n  };\n\n  const yaxis = {\n    title: \"yaxis title\",\n    titlefont: { color: \"#1f77b4\" },\n    tickfont: { color: \"#1f77b4\" },\n  };\n\n  const yaxis2 = {\n    title: \"yaxis2 title\",\n    titlefont: { color: \"#ff7f0e\" },\n    tickfont: { color: \"#ff7f0e\" },\n    anchor: \"free\",\n    overlaying: \"y\",\n    side: \"left\",\n    position: 0.125,\n  };\n  const yaxis3 = {\n    title: \"yaxis4 title\",\n    titlefont: { color: \"#d62728\" },\n    tickfont: { color: \"#d62728\" },\n    anchor: \"x\",\n    overlaying: \"y\",\n    side: \"right\",\n  };\n  const yaxis4 = {\n    title: \"yaxis5 title\",\n    titlefont: { color: \"#9467bd\" },\n    tickfont: { color: \"#9467bd\" },\n    anchor: \"free\",\n    overlaying: \"y\",\n    side: \"right\",\n    position: 0.85,\n  };\n\n  let plotGraphData: any[] = [];\n\n  const [fetchUrl, setfetchUrl] = useState<any>();\n  const [trigger, setTrigger] = useState<boolean>(true);\n  const [extension, setExtension] = useState(\"\");\n  const [value, setValue] = useState<string>(\"Close\");\n  const [GraphTitle, setGraphTitle] = useState(\"\");\n  const [dataGraph, setDataGraph] = useState<any[]>([]);\n\n  async function myFetch(toFetch: string) {\n    console.log(\"fetching2: \" + toFetch);\n    const response = await fetch(toFetch);\n    // return Promise.resolve(response);\n    return response;\n  }\n\n  function populateGraphValue(\n    dailyValuesList: any[],\n    graphTitle: string\n  ): void {\n    let dailyValuesOrdinate: number[] = [];\n    let dates: Date[] = [];\n\n    console.log(dailyValuesList);\n    dailyValuesList.forEach((daily) => {\n      dailyValuesOrdinate.push(manageOption(daily));\n      dates.push(toDateObject(daily.date));\n    });\n\n    const graphData: PlotGraph = {\n      x: dates,\n      y: dailyValuesOrdinate,\n      type: \"scatter\",\n      yaxis: \"y\".concat(\n        plotGraphData.length === 0 ? \"\" : (plotGraphData.length + 1).toString()\n      ),\n      name: graphTitle,\n    };\n    console.log(graphData);\n    plotGraphData = dataGraph;\n    plotGraphData.push(graphData);\n    setDataGraph(plotGraphData);\n    console.log(\"Number of graph in my list \" + plotGraphData.length);\n    dates = [];\n    dailyValuesOrdinate = [];\n  }\n\n  function manageOption(obj: DailyExchange): number {\n    switch (option) {\n      case \"close\":\n        return obj.close;\n        break;\n      case \"high\":\n        return obj.high;\n        break;\n      case \"low\":\n        return obj.low;\n        break;\n      case \"volume\":\n        return obj.volume;\n        break;\n      case \"open\":\n        return obj.open;\n        break;\n      default:\n        return obj.close;\n        break;\n    }\n  }\n\n  function process(prom, graphTitle: string) {\n    let dailyValues: DailyExchange[] = [];\n    prom\n      .then((data) => {\n        const stockEvents: any[] = data;\n        console.log(stockEvents?.length);\n        console.log(stockEvents);\n        stockEvents.forEach((stocky) => {\n          let tempString: string = JSON.stringify(stocky); //extract(stockEvents[i]);\n          let obj = JSON.parse(tempString);\n          let dailyExchangeObj: DailyExchange = {\n            date: obj.Date,\n            high: obj.High,\n            low: obj.Low,\n            open: obj.Open,\n            volume: obj.Volume,\n            close: obj.Close,\n          };\n          dailyValues.push(dailyExchangeObj);\n        });\n        populateGraphValue(dailyValues, graphTitle);\n      })\n      .catch((err) => {\n        console.log(\"There was an error in fetching\", err);\n      });\n  }\n\n  function toDateObject(dateString: string): Date {\n    const temp: string[] = dateString.split(\"-\");\n    const date: Date = new Date();\n    date.setFullYear(parseInt(temp[0]), parseInt(temp[1]), parseInt(temp[2]));\n    return date;\n  }\n\n  useEffect(() => {\n    setValue(option);\n    let myFetches: any[] = [];\n    let companiesFetched: string[] = [];\n\n    companyList.forEach((id) => {\n      if (id !== \"\") {\n        const fetching = companies.companies.find((comp) => comp.id === id)\n          ?.JsonUrl;\n        console.log(\"we are fetching: \" + fetching);\n\n        const companyName = companies.companies.find((comp) => comp.id === id)\n          ?.name;\n        console.log(\"Company we are fetching: \" + companyName);\n        companiesFetched.push(String(companyName));\n        console.log(\"fetching: \" + fetching);\n        myFetches.push(myFetch(String(fetching)));\n      }\n    });\n    companiesFetched.reverse();\n    Promise.all(myFetches)\n      .then((files) => {\n        files.forEach((file) => {\n          process(file.json(), String(companiesFetched.pop()));\n        });\n      })\n      .catch((err) => {\n        console.log(\"There was an error in fetching\", err);\n      });\n  }, []);\n\n  function handleChange(event) {\n    const linkvalue: string = event.target.value;\n    setValue(linkvalue);\n    setExtension(\"/visualMultiple/\" + company + \"/\" + linkvalue.toLowerCase());\n    console.log(extension);\n  }\n\n  return (\n    <div style={{ alignItems: \"center\", margin: \"12\" }}>\n      <div>\n        <Link to={\"/home\"} type=\"button\">\n          Go to Home\n        </Link>\n      </div>\n      <div>\n        <label>\n          Pick the chart to display:\n          <select value={value} onChange={handleChange}>\n            <option value=\"Close\">Select from Menu</option>\n            <option value=\"Open\">Open</option>\n            <option value=\"Volume\">Volume</option>\n            <option value=\"Close\">Close</option>\n            <option value=\"High\">High</option>\n            <option value=\"Low\">Low</option>\n          </select>\n        </label>\n        <a href={extension}>Visualize </a>\n      </div>\n      <div>\n        <Plot\n          data={dataGraph}\n          layout={{\n            // width: 1000,\n            // height: 600,\n            title: \"Double Y Axis Example\",\n            yaxis: yaxis,\n            yaxis2: yaxis3,\n            yaxis3: yaxis2,\n            yaxis4: yaxis4,\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CombineGraph;\n"]},"metadata":{},"sourceType":"module"}