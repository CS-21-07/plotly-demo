{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benajasandrain/GitHub/plotly-demo/src/Extraction/XmlToJson/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst XmlToJson = props => {\n  _s();\n\n  console.log(\"RRD tool extraction\");\n  const [xmltest, setxml] = useState(\"\");\n  const [json, setJson] = useState(\"\");\n  /*\tThis work is licensed under Creative Commons GNU LGPL License.\n  License: http://creativecommons.org/licenses/LGPL/2.1/\n   Version: 0.9\n  Author:  Stefan Goessner/2006\n  Web:     http://goessner.net/ \n  */\n\n  function xml2json(xml, tab) {\n    let X = {\n      toObj: function (xml) {\n        let o = {};\n        console.log(\"THIS: \" + xml.nodeType);\n\n        if (xml.nodeType === 1) {\n          // element node ..\n          if (xml.attributes.length) // element with attributes  ..\n            for (let i = 0; i < xml.attributes.length; i++) o[\"@\" + xml.attributes[i].nodeName] = (xml.attributes[i].nodeValue || \"\").toString();\n\n          if (xml.firstChild) {\n            // element has child nodes ..\n            let textChild = 0,\n                cdataChild = 0,\n                hasElementChild = false;\n\n            for (let n = xml.firstChild; n; n = n.nextSibling) {\n              if (n.nodeType == 1) hasElementChild = true;else if (n.nodeType == 3 && n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) textChild++; // non-whitespace text\n              else if (n.nodeType == 4) cdataChild++; // cdata section node\n            }\n\n            if (hasElementChild) {\n              if (textChild < 2 && cdataChild < 2) {\n                // structured element with evtl. a single text or/and cdata node ..\n                X.removeWhite(xml);\n\n                for (var n = xml.firstChild; n; n = n.nextSibling) {\n                  if (n.nodeType == 3) // text node\n                    o[\"#text\"] = X.escape(n.nodeValue);else if (n.nodeType == 4) // cdata node\n                    o[\"#cdata\"] = X.escape(n.nodeValue);else if (o[n.nodeName]) {\n                    // multiple occurence of element ..\n                    if (o[n.nodeName] instanceof Array) o[n.nodeName][o[n.nodeName].length] = X.toObj(n);else o[n.nodeName] = [o[n.nodeName], X.toObj(n)];\n                  } // first occurence of element..\n                  else o[n.nodeName] = X.toObj(n);\n                }\n              } else {\n                // mixed content\n                if (!xml.attributes.length) o = X.escape(X.innerXml(xml));else o[\"#text\"] = X.escape(X.innerXml(xml));\n              }\n            } else if (textChild) {\n              // pure text\n              if (!xml.attributes.length) o = X.escape(X.innerXml(xml));else o[\"#text\"] = X.escape(X.innerXml(xml));\n            } else if (cdataChild) {\n              // cdata\n              if (cdataChild > 1) o = X.escape(X.innerXml(xml));else for (var n = xml.firstChild; n; n = n.nextSibling) o[\"#cdata\"] = X.escape(n.nodeValue);\n            }\n          }\n\n          if (!xml.attributes.length && !xml.firstChild) o = null;\n        } else if (xml.nodeType == 9) {\n          // document.node\n          o = X.toObj(xml.documentElement);\n        } else alert(\"unhandled node type: \" + xml.nodeType);\n\n        return o;\n      },\n      toJson: function (o, name, ind) {\n        var json = name ? '\"' + name + '\"' : \"\";\n\n        if (o instanceof Array) {\n          for (var i = 0, n = o.length; i < n; i++) o[i] = X.toJson(o[i], \"\", ind + \"\\t\");\n\n          json += (name ? \":[\" : \"[\") + (o.length > 1 ? \"\\n\" + ind + \"\\t\" + o.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind : o.join(\"\")) + \"]\";\n        } else if (o == null) json += (name && \":\") + \"null\";else if (typeof o == \"object\") {\n          let arr = [];\n\n          for (var m in o) arr[arr.length] = X.toJson(o[m], m, ind + \"\\t\");\n\n          json += (name ? \":{\" : \"{\") + (arr.length > 1 ? \"\\n\" + ind + \"\\t\" + arr.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind : arr.join(\"\")) + \"}\";\n        } else if (typeof o == \"string\") json += (name && \":\") + '\"' + o.toString() + '\"';else json += (name && \":\") + o.toString();\n\n        return json;\n      },\n      innerXml: function (node) {\n        var s = \"\";\n        if (\"innerHTML\" in node) s = node.innerHTML;else {\n          var asXml = function (n) {\n            var s = \"\";\n\n            if (n.nodeType == 1) {\n              s += \"<\" + n.nodeName;\n\n              for (var i = 0; i < n.attributes.length; i++) s += \" \" + n.attributes[i].nodeName + '=\"' + (n.attributes[i].nodeValue || \"\").toString() + '\"';\n\n              if (n.firstChild) {\n                s += \">\";\n\n                for (var c = n.firstChild; c; c = c.nextSibling) s += asXml(c);\n\n                s += \"</\" + n.nodeName + \">\";\n              } else s += \"/>\";\n            } else if (n.nodeType == 3) s += n.nodeValue;else if (n.nodeType == 4) s += \"<![CDATA[\" + n.nodeValue + \"]]>\";\n\n            return s;\n          };\n\n          for (var c = node.firstChild; c; c = c.nextSibling) s += asXml(c);\n        }\n        return s;\n      },\n      escape: function (txt) {\n        return txt.replace(/[\\\\]/g, \"\\\\\\\\\").replace(/[\\\"]/g, '\\\\\"').replace(/[\\n]/g, \"\\\\n\").replace(/[\\r]/g, \"\\\\r\");\n      },\n      removeWhite: function (e) {\n        e.normalize();\n\n        for (var n = e.firstChild; n;) {\n          if (n.nodeType == 3) {\n            // text node\n            if (!n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) {\n              // pure whitespace text node\n              var nxt = n.nextSibling;\n              e.removeChild(n);\n              n = nxt;\n            } else n = n.nextSibling;\n          } else if (n.nodeType == 1) {\n            // element node\n            X.removeWhite(n);\n            n = n.nextSibling;\n          } // any other node\n          else n = n.nextSibling;\n        }\n\n        return e;\n      }\n    };\n    if (xml.nodeType == 9) // document node\n      xml = xml.documentElement;\n    var json = X.toJson(X.toObj(X.removeWhite(xml)), xml.nodeName, \"\\t\");\n    return \"{\\n\" + tab + (tab ? json.replace(/\\t/g, tab) : json.replace(/\\t|\\n/g, \"\")) + \"\\n}\";\n  }\n\n  function parseXml(xml) {\n    var _window;\n\n    let dom = null;\n\n    if ((_window = window) === null || _window === void 0 ? void 0 : _window.DOMParser) {\n      try {\n        dom = new DOMParser().parseFromString(xml, \"text/xml\");\n      } catch (e) {\n        dom = null;\n      }\n    } else alert(\"cannot parse xml string!\");\n\n    return dom;\n  } // const xmlVal = '<?xml version=\"1.0\" encoding=\"utf-8\"?> <note importance=\"high\" logged=\"true\"> <title>Happy</title> <todo>Work</todo> <todo>Play</todo> </note>';\n\n\n  let xmlval = '<e name=\"value\">text</e>';\n  setxml(xmlval);\n  let dom = parseXml(xmlval);\n  setJson(xml2json(dom, \"  \"));\n  console.log(json); // const xmlVal = '<e name=\"value\">text</e>';\n  // const text = xml2json(xmlVal, \"   \");\n  // console.log(text);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      alignItems: \"center\",\n      margin: \"12px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"initial xml\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: xmlval\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"corresponding xml\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: json\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n\n_s(XmlToJson, \"00luHgY5IkkT+HlD3qiFNYexOyw=\");\n\n_c = XmlToJson;\nexport default XmlToJson;\n\nvar _c;\n\n$RefreshReg$(_c, \"XmlToJson\");","map":{"version":3,"sources":["/Users/benajasandrain/GitHub/plotly-demo/src/Extraction/XmlToJson/index.tsx"],"names":["React","useState","XmlToJson","props","console","log","xmltest","setxml","json","setJson","xml2json","xml","tab","X","toObj","o","nodeType","attributes","length","i","nodeName","nodeValue","toString","firstChild","textChild","cdataChild","hasElementChild","n","nextSibling","match","removeWhite","escape","Array","innerXml","documentElement","alert","toJson","name","ind","join","arr","m","node","s","innerHTML","asXml","c","txt","replace","e","normalize","nxt","removeChild","parseXml","dom","window","DOMParser","parseFromString","xmlval","alignItems","margin"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ninterface XmlToJsonPropsInterface extends RouteComponentProps<{}> {\n  // Other props that belong to component it self not Router\n}\n\nconst XmlToJson: React.FC<XmlToJsonPropsInterface> = (\n  props: XmlToJsonPropsInterface\n) => {\n  console.log(\"RRD tool extraction\");\n\n  const [xmltest, setxml] = useState(\"\");\n  const [json, setJson] = useState(\"\");\n\n  /*\tThis work is licensed under Creative Commons GNU LGPL License.\n\n\tLicense: http://creativecommons.org/licenses/LGPL/2.1/\n   Version: 0.9\n\tAuthor:  Stefan Goessner/2006\n\tWeb:     http://goessner.net/ \n*/\n  function xml2json(xml: any, tab: any) {\n    let X = {\n      toObj: function (xml: any) {\n        let o: any = {};\n        console.log(\"THIS: \" + xml.nodeType);\n        if (xml.nodeType === 1) {\n          // element node ..\n          if (xml.attributes.length)\n            // element with attributes  ..\n            for (let i = 0; i < xml.attributes.length; i++)\n              o[\"@\" + xml.attributes[i].nodeName] = (\n                xml.attributes[i].nodeValue || \"\"\n              ).toString();\n          if (xml.firstChild) {\n            // element has child nodes ..\n            let textChild = 0,\n              cdataChild = 0,\n              hasElementChild = false;\n            for (let n = xml.firstChild; n; n = n.nextSibling) {\n              if (n.nodeType == 1) hasElementChild = true;\n              else if (n.nodeType == 3 && n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/))\n                textChild++;\n              // non-whitespace text\n              else if (n.nodeType == 4) cdataChild++; // cdata section node\n            }\n            if (hasElementChild) {\n              if (textChild < 2 && cdataChild < 2) {\n                // structured element with evtl. a single text or/and cdata node ..\n                X.removeWhite(xml);\n                for (var n = xml.firstChild; n; n = n.nextSibling) {\n                  if (n.nodeType == 3)\n                    // text node\n                    o[\"#text\"] = X.escape(n.nodeValue);\n                  else if (n.nodeType == 4)\n                    // cdata node\n                    o[\"#cdata\"] = X.escape(n.nodeValue);\n                  else if (o[n.nodeName]) {\n                    // multiple occurence of element ..\n                    if (o[n.nodeName] instanceof Array)\n                      o[n.nodeName][o[n.nodeName].length] = X.toObj(n);\n                    else o[n.nodeName] = [o[n.nodeName], X.toObj(n)];\n                  } // first occurence of element..\n                  else o[n.nodeName] = X.toObj(n);\n                }\n              } else {\n                // mixed content\n                if (!xml.attributes.length) o = X.escape(X.innerXml(xml));\n                else o[\"#text\"] = X.escape(X.innerXml(xml));\n              }\n            } else if (textChild) {\n              // pure text\n              if (!xml.attributes.length) o = X.escape(X.innerXml(xml));\n              else o[\"#text\"] = X.escape(X.innerXml(xml));\n            } else if (cdataChild) {\n              // cdata\n              if (cdataChild > 1) o = X.escape(X.innerXml(xml));\n              else\n                for (var n = xml.firstChild; n; n = n.nextSibling)\n                  o[\"#cdata\"] = X.escape(n.nodeValue);\n            }\n          }\n          if (!xml.attributes.length && !xml.firstChild) o = null;\n        } else if (xml.nodeType == 9) {\n          // document.node\n          o = X.toObj(xml.documentElement);\n        } else alert(\"unhandled node type: \" + xml.nodeType);\n        return o;\n      },\n      toJson: function (o: any, name: any, ind: any) {\n        var json = name ? '\"' + name + '\"' : \"\";\n        if (o instanceof Array) {\n          for (var i = 0, n = o.length; i < n; i++)\n            o[i] = X.toJson(o[i], \"\", ind + \"\\t\");\n          json +=\n            (name ? \":[\" : \"[\") +\n            (o.length > 1\n              ? \"\\n\" + ind + \"\\t\" + o.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind\n              : o.join(\"\")) +\n            \"]\";\n        } else if (o == null) json += (name && \":\") + \"null\";\n        else if (typeof o == \"object\") {\n          let arr: any[] = [];\n          for (var m in o) arr[arr.length] = X.toJson(o[m], m, ind + \"\\t\");\n          json +=\n            (name ? \":{\" : \"{\") +\n            (arr.length > 1\n              ? \"\\n\" + ind + \"\\t\" + arr.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind\n              : arr.join(\"\")) +\n            \"}\";\n        } else if (typeof o == \"string\")\n          json += (name && \":\") + '\"' + o.toString() + '\"';\n        else json += (name && \":\") + o.toString();\n        return json;\n      },\n      innerXml: function (node: any) {\n        var s = \"\";\n        if (\"innerHTML\" in node) s = node.innerHTML;\n        else {\n          var asXml = function (n: any) {\n            var s = \"\";\n            if (n.nodeType == 1) {\n              s += \"<\" + n.nodeName;\n              for (var i = 0; i < n.attributes.length; i++)\n                s +=\n                  \" \" +\n                  n.attributes[i].nodeName +\n                  '=\"' +\n                  (n.attributes[i].nodeValue || \"\").toString() +\n                  '\"';\n              if (n.firstChild) {\n                s += \">\";\n                for (var c = n.firstChild; c; c = c.nextSibling) s += asXml(c);\n                s += \"</\" + n.nodeName + \">\";\n              } else s += \"/>\";\n            } else if (n.nodeType == 3) s += n.nodeValue;\n            else if (n.nodeType == 4) s += \"<![CDATA[\" + n.nodeValue + \"]]>\";\n            return s;\n          };\n          for (var c = node.firstChild; c; c = c.nextSibling) s += asXml(c);\n        }\n        return s;\n      },\n      escape: function (txt: any) {\n        return txt\n          .replace(/[\\\\]/g, \"\\\\\\\\\")\n          .replace(/[\\\"]/g, '\\\\\"')\n          .replace(/[\\n]/g, \"\\\\n\")\n          .replace(/[\\r]/g, \"\\\\r\");\n      },\n      removeWhite: function (e: any) {\n        e.normalize();\n        for (var n = e.firstChild; n; ) {\n          if (n.nodeType == 3) {\n            // text node\n            if (!n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) {\n              // pure whitespace text node\n              var nxt = n.nextSibling;\n              e.removeChild(n);\n              n = nxt;\n            } else n = n.nextSibling;\n          } else if (n.nodeType == 1) {\n            // element node\n            X.removeWhite(n);\n            n = n.nextSibling;\n          } // any other node\n          else n = n.nextSibling;\n        }\n        return e;\n      },\n    };\n    if (xml.nodeType == 9)\n      // document node\n      xml = xml.documentElement;\n    var json = X.toJson(X.toObj(X.removeWhite(xml)), xml.nodeName, \"\\t\");\n    return (\n      \"{\\n\" +\n      tab +\n      (tab ? json.replace(/\\t/g, tab) : json.replace(/\\t|\\n/g, \"\")) +\n      \"\\n}\"\n    );\n  }\n\n  function parseXml(xml: any) {\n    let dom: any = null;\n    if (window?.DOMParser) {\n      try {\n        dom = new DOMParser().parseFromString(xml, \"text/xml\");\n      } catch (e) {\n        dom = null;\n      }\n    } else alert(\"cannot parse xml string!\");\n    return dom;\n  }\n  // const xmlVal = '<?xml version=\"1.0\" encoding=\"utf-8\"?> <note importance=\"high\" logged=\"true\"> <title>Happy</title> <todo>Work</todo> <todo>Play</todo> </note>';\n  let xmlval = '<e name=\"value\">text</e>';\n  setxml(xmlval);\n  let dom = parseXml(xmlval);\n  setJson(xml2json(dom, \"  \"));\n  console.log(json);\n  // const xmlVal = '<e name=\"value\">text</e>';\n  // const text = xml2json(xmlVal, \"   \");\n  // console.log(text);\n\n  return (\n    <div style={{ alignItems: \"center\", margin: \"12px\" }}>\n      <div>\n        <h3>initial xml</h3>\n        <p>{xmlval}</p>\n      </div>\n      <div>\n        <h3>corresponding xml</h3>\n        <p>{json}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default XmlToJson;\n"]},"metadata":{},"sourceType":"module"}