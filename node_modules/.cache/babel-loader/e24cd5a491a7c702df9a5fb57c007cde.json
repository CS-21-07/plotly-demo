{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/benajasandrain/GitHub/plotly-demo/src/pages/graphpage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\nimport * as companies from \"../data/urlMatcher.json\";\nimport { Link } from \"react-router-dom\";\n\nconst GraphPage = props => {\n  _s();\n\n  var _companies$companies$, _companies$companies$2;\n\n  // setting to props parameters\n  const company = props.match.params.company;\n  const option = props.match.params.option;\n  const dailyValues = [];\n  let dailyValuesOrdinate = [];\n  let dates = [];\n  const [fetchUrl, setfetchUrl] = useState();\n  const [trigger, setTrigger] = useState(true);\n  const [extension, setExtension] = useState(\"\");\n  const [value, setValue] = useState(\"Close\");\n  const [xx, setxx] = useState([]);\n  const [yy, setyy] = useState([]);\n  const [isVolume, SetIsVolume] = useState(value === \"Volume\"); // const selectCompany = JSON.stringify(companies);\n  // const selectCompanyArray: any[] = JSON.parse(selectCompany);\n  // const fetching: string = selectCompanyArray.find(\n  //   (comp) => comp.company === company\n  // );\n\n  const fetching = (_companies$companies$ = companies.companies.find(comp => comp.company === company)) === null || _companies$companies$ === void 0 ? void 0 : _companies$companies$.JsonUrl; // const fetching =\n  //   \"https://raw.githubusercontent.com/CS-21-07/jsonStorage/main/citrixstock.json\";\n\n  console.log(\"we are fetching: \" + fetching);\n  const companyName = (_companies$companies$2 = companies.companies.find(comp => comp.company === company)) === null || _companies$companies$2 === void 0 ? void 0 : _companies$companies$2.name;\n  const GraphTitle = (companyName === null || companyName === void 0 ? void 0 : companyName.toUpperCase()) + \" - Stock Market: (\" + option + \")\";\n  useEffect(() => {\n    setfetchUrl(fetching);\n\n    async function data() {\n      const response = await fetch(fetchUrl).then(function (response) {\n        console.log(\"Successful fetch\");\n        return response.json();\n      }).catch(err => {\n        console.log(\"There was an error in fetching\", err);\n      });\n      return Promise.resolve(response);\n    }\n\n    data().then(response => {\n      const stockEvents = response;\n      console.log(stockEvents === null || stockEvents === void 0 ? void 0 : stockEvents.length);\n      console.log(stockEvents);\n\n      for (let i = 0; i < (stockEvents === null || stockEvents === void 0 ? void 0 : stockEvents.length); i++) {\n        // let obj: DailyExchange = stockEvents[i]; //extract(stockEvents[i]);\n        let tempString = JSON.stringify(stockEvents[i]); //extract(stockEvents[i]);\n\n        let obj = JSON.parse(tempString);\n        let dailyExchangeObj = {\n          date: obj.Date,\n          high: obj.High,\n          low: obj.Low,\n          open: obj.Open,\n          volume: obj.Volume,\n          close: obj.Close\n        };\n        dailyValues.push(dailyExchangeObj);\n      }\n\n      populateGraphValue();\n    });\n    setValue(option);\n  }, [fetchUrl]);\n\n  function populateGraphValue() {\n    for (let i = 0; i < dailyValues.length; i++) {\n      manageOption(dailyValues[i]);\n      dates.push(toDateObject(dailyValues[i].date));\n    }\n\n    setxx(dates);\n    setyy(dailyValuesOrdinate);\n  }\n\n  function manageOption(obj) {\n    switch (option) {\n      case \"close\":\n        dailyValuesOrdinate.push(obj.close);\n        break;\n\n      case \"high\":\n        dailyValuesOrdinate.push(obj.high);\n        break;\n\n      case \"low\":\n        dailyValuesOrdinate.push(obj.low);\n        break;\n\n      case \"volume\":\n        dailyValuesOrdinate.push(obj.volume);\n        SetIsVolume(true);\n        break;\n\n      case \"open\":\n        dailyValuesOrdinate.push(obj.open);\n        break;\n\n      default:\n        dailyValuesOrdinate.push(obj.close);\n        break;\n    }\n  }\n\n  function extract(obj) {\n    // given an object, it return the DailyExchange corresponding\n    let temp = {\n      date: obj.Date,\n      high: obj.High,\n      low: obj.Low,\n      open: obj.Open,\n      volume: obj.Volume,\n      close: obj.close\n    };\n    return temp;\n  }\n\n  function toDateObject(dateString) {\n    const temp = dateString.split(\"-\");\n    const date = new Date();\n    date.setFullYear(parseInt(temp[0]), parseInt(temp[1]), parseInt(temp[2]));\n    return date;\n  }\n\n  function handleAuthClick(event) {\n    setTrigger(!trigger);\n  }\n\n  function handleChange(event) {\n    const linkvalue = event.target.value;\n    setValue(linkvalue);\n    setExtension(\"/visual/\" + company + \"/\" + linkvalue.toLowerCase());\n    console.log(extension);\n  }\n\n  const options = [\"volume\", \"open\", \"close\", \"high\", \"low\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      alignItems: \"center\",\n      margin: \"12\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home\",\n        type: \"button\",\n        children: \"Go to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Pick the chart to display:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: value,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Close\",\n            children: \"Select from Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Open\",\n            children: \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Volume\",\n            children: \"Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Close\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"High\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: extension,\n        children: \"Visualize \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!isVolume ? /*#__PURE__*/_jsxDEV(Plot, {\n        data: [{\n          // x: [1, 2, 3, 7],\n          // y: [2, 6, 3, 9],\n          x: xx,\n          y: yy,\n          type: \"scatter\",\n          // mode: \"lines+markers\",\n          mode: \"lines\",\n          marker: {\n            color: \"red\"\n          }\n        } // { type: \"bar\", x: [1, 2, 3], y: [2, 5, 3] },\n        ],\n        layout: {\n          width: 1000,\n          height: 600,\n          title: GraphTitle\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), isVolume ? /*#__PURE__*/_jsxDEV(Plot, {\n        data: [{\n          x: xx,\n          y: yy,\n          type: \"bar\",\n          mode: \"lines\",\n          marker: {\n            color: \"red\"\n          }\n        }],\n        layout: {\n          width: 1000,\n          height: 600,\n          title: GraphTitle\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GraphPage, \"gVXNd74YBSgwFuuLxgAAX4HPsEU=\");\n\n_c = GraphPage;\nexport default GraphPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphPage\");","map":{"version":3,"sources":["/Users/benajasandrain/GitHub/plotly-demo/src/pages/graphpage.tsx"],"names":["React","useState","useEffect","Plot","companies","Link","GraphPage","props","company","match","params","option","dailyValues","dailyValuesOrdinate","dates","fetchUrl","setfetchUrl","trigger","setTrigger","extension","setExtension","value","setValue","xx","setxx","yy","setyy","isVolume","SetIsVolume","fetching","find","comp","JsonUrl","console","log","companyName","name","GraphTitle","toUpperCase","data","response","fetch","then","json","catch","err","Promise","resolve","stockEvents","length","i","tempString","JSON","stringify","obj","parse","dailyExchangeObj","date","Date","high","High","low","Low","open","Open","volume","Volume","close","Close","push","populateGraphValue","manageOption","toDateObject","extract","temp","dateString","split","setFullYear","parseInt","handleAuthClick","event","handleChange","linkvalue","target","toLowerCase","options","alignItems","margin","x","y","type","mode","marker","color","width","height","title"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Plot from \"react-plotly.js\";\nimport * as companies from \"../data/urlMatcher.json\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-dropdown-select\";\n\ninterface GraphPagePropsInterface\n  extends RouteComponentProps<{ company: string; option: string }> {\n  // Other props that belong to component it self not Router\n}\n\nconst GraphPage: React.FC<GraphPagePropsInterface> = (\n  props: GraphPagePropsInterface\n) => {\n  // setting to props parameters\n  const company = props.match.params.company;\n  const option = props.match.params.option;\n\n  type DailyExchange = {\n    date: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    adjClose?: number;\n    volume: number;\n  };\n\n  const dailyValues: DailyExchange[] = [];\n  let dailyValuesOrdinate: number[] = [];\n  let dates: Date[] = [];\n\n  const [fetchUrl, setfetchUrl] = useState<any>();\n  const [trigger, setTrigger] = useState<boolean>(true);\n  const [extension, setExtension] = useState(\"\");\n  const [value, setValue] = useState<string>(\"Close\");\n  const [xx, setxx] = useState<Date[]>([]);\n  const [yy, setyy] = useState<number[]>([]);\n  const [isVolume, SetIsVolume] = useState(value === \"Volume\");\n\n  // const selectCompany = JSON.stringify(companies);\n  // const selectCompanyArray: any[] = JSON.parse(selectCompany);\n  // const fetching: string = selectCompanyArray.find(\n  //   (comp) => comp.company === company\n  // );\n  const fetching = companies.companies.find((comp) => comp.company === company)\n    ?.JsonUrl;\n  // const fetching =\n  //   \"https://raw.githubusercontent.com/CS-21-07/jsonStorage/main/citrixstock.json\";\n  console.log(\"we are fetching: \" + fetching);\n\n  const companyName = companies.companies.find(\n    (comp) => comp.company === company\n  )?.name;\n\n  const GraphTitle: string =\n    companyName?.toUpperCase() + \" - Stock Market: (\" + option + \")\";\n\n  useEffect(() => {\n    setfetchUrl(fetching);\n    async function data(): Promise<any[]> {\n      const response = await fetch(fetchUrl)\n        .then(function (response: any) {\n          console.log(\"Successful fetch\");\n          return response.json();\n        })\n        .catch((err) => {\n          console.log(\"There was an error in fetching\", err);\n        });\n      return Promise.resolve(response);\n    }\n    data().then((response) => {\n      const stockEvents: any[] = response;\n      console.log(stockEvents?.length);\n      console.log(stockEvents);\n      for (let i: number = 0; i < stockEvents?.length; i++) {\n        // let obj: DailyExchange = stockEvents[i]; //extract(stockEvents[i]);\n        let tempString: string = JSON.stringify(stockEvents[i]); //extract(stockEvents[i]);\n        let obj = JSON.parse(tempString);\n        let dailyExchangeObj: DailyExchange = {\n          date: obj.Date,\n          high: obj.High,\n          low: obj.Low,\n          open: obj.Open,\n          volume: obj.Volume,\n          close: obj.Close,\n        };\n        dailyValues.push(dailyExchangeObj);\n      }\n      populateGraphValue();\n    });\n    setValue(option);\n  }, [fetchUrl]);\n\n  function populateGraphValue(): void {\n    for (let i = 0; i < dailyValues.length; i++) {\n      manageOption(dailyValues[i]);\n      dates.push(toDateObject(dailyValues[i].date));\n    }\n    setxx(dates);\n    setyy(dailyValuesOrdinate);\n  }\n\n  function manageOption(obj: DailyExchange): void {\n    switch (option) {\n      case \"close\":\n        dailyValuesOrdinate.push(obj.close);\n        break;\n      case \"high\":\n        dailyValuesOrdinate.push(obj.high);\n        break;\n      case \"low\":\n        dailyValuesOrdinate.push(obj.low);\n        break;\n      case \"volume\":\n        dailyValuesOrdinate.push(obj.volume);\n        SetIsVolume(true);\n        break;\n      case \"open\":\n        dailyValuesOrdinate.push(obj.open);\n        break;\n      default:\n        dailyValuesOrdinate.push(obj.close);\n        break;\n    }\n  }\n\n  function extract(obj: any): DailyExchange {\n    // given an object, it return the DailyExchange corresponding\n    let temp: DailyExchange = {\n      date: obj.Date,\n      high: obj.High,\n      low: obj.Low,\n      open: obj.Open,\n      volume: obj.Volume,\n      close: obj.close,\n    };\n\n    return temp;\n  }\n\n  function toDateObject(dateString: string): Date {\n    const temp: string[] = dateString.split(\"-\");\n    const date: Date = new Date();\n    date.setFullYear(parseInt(temp[0]), parseInt(temp[1]), parseInt(temp[2]));\n    return date;\n  }\n\n  function handleAuthClick(event: any) {\n    setTrigger(!trigger);\n  }\n\n  function handleChange(event) {\n    const linkvalue: string = event.target.value;\n    setValue(linkvalue);\n    setExtension(\"/visual/\" + company + \"/\" + linkvalue.toLowerCase());\n    console.log(extension);\n  }\n\n  const options = [\"volume\", \"open\", \"close\", \"high\", \"low\"];\n\n  return (\n    <div style={{ alignItems: \"center\", margin: \"12\" }}>\n      {/* <button\n        className=\"btn btn-primary\"\n        id=\"authorize_button\"\n        onClick={handleAuthClick}\n        style={{\n          height: \"100%\",\n          justifyContent: \"center\",\n          alignSelf: \"center\",\n          display: \"block\",\n          float: \"left\",\n          margin: 30,\n        }}\n      >\n        display\n      </button> */}\n      <div>\n        <Link to={\"/home\"} type=\"button\">\n          Go to Home\n        </Link>\n      </div>\n      <div>\n        <label>\n          Pick the chart to display:\n          <select value={value} onChange={handleChange}>\n            <option value=\"Close\">Select from Menu</option>\n            <option value=\"Open\">Open</option>\n            <option value=\"Volume\">Volume</option>\n            <option value=\"Close\">Close</option>\n            <option value=\"High\">High</option>\n            <option value=\"Low\">Low</option>\n          </select>\n        </label>\n        <a href={extension}>Visualize </a>\n        {/* <Link to={extension} type=\"button\" className=\"btn btn-primary\">\n          Visualize\n        </Link> */}\n      </div>\n      <div>\n        {!isVolume ? (\n          <Plot\n            data={[\n              {\n                // x: [1, 2, 3, 7],\n                // y: [2, 6, 3, 9],\n                x: xx,\n                y: yy,\n                type: \"scatter\",\n                // mode: \"lines+markers\",\n                mode: \"lines\",\n                marker: { color: \"red\" },\n              },\n              // { type: \"bar\", x: [1, 2, 3], y: [2, 5, 3] },\n            ]}\n            layout={{\n              width: 1000,\n              height: 600,\n              title: GraphTitle,\n            }}\n          />\n        ) : (\n          <div></div>\n        )}\n        {isVolume ? (\n          <Plot\n            data={[\n              {\n                x: xx,\n                y: yy,\n                type: \"bar\",\n                mode: \"lines\",\n                marker: { color: \"red\" },\n              },\n            ]}\n            layout={{\n              width: 1000,\n              height: 600,\n              title: GraphTitle,\n            }}\n          />\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GraphPage;\n"]},"metadata":{},"sourceType":"module"}